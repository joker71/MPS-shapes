package NewLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCanvas = createDescriptorForCanvas();
  /*package*/ final ConceptDescriptor myConceptCircle = createDescriptorForCircle();
  /*package*/ final ConceptDescriptor myConceptShape = createDescriptorForShape();
  /*package*/ final ConceptDescriptor myConceptSquare = createDescriptorForSquare();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCanvas, myConceptCircle, myConceptShape, myConceptSquare);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Canvas:
        return myConceptCanvas;
      case LanguageConceptSwitch.Circle:
        return myConceptCircle;
      case LanguageConceptSwitch.Shape:
        return myConceptShape;
      case LanguageConceptSwitch.Square:
        return myConceptSquare;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForCanvas() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Canvas", 0xc55c3e7213e340d0L, 0x9804490722b4fb78L, 0x45a29cf7edb1b696L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:ef26fc9a-d854-444a-8e3b-553a4a5da465(NewLanguage.structure)/5017745523502855830");
    b.version(3);
    b.aggregate("shapes", 0x45a29cf7edb1b69cL).target(0xc55c3e7213e340d0L, 0x9804490722b4fb78L, 0x45a29cf7edb1b68cL).optional(true).ordered(true).multiple(false).origin("5017745523502855836").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCircle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Circle", 0xc55c3e7213e340d0L, 0x9804490722b4fb78L, 0x45a29cf7edb1b68eL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.Shape
    b.super_(0xc55c3e7213e340d0L, 0x9804490722b4fb78L, 0x45a29cf7edb1b68cL);
    b.origin("r:ef26fc9a-d854-444a-8e3b-553a4a5da465(NewLanguage.structure)/5017745523502855822");
    b.version(3);
    b.property("x", 0x45a29cf7edb1b68fL).type(PrimitiveTypeId.INTEGER).origin("5017745523502855823").done();
    b.property("y", 0x45a29cf7edb1b690L).type(PrimitiveTypeId.INTEGER).origin("5017745523502855824").done();
    b.property("radios", 0x45a29cf7edb1b691L).type(PrimitiveTypeId.INTEGER).origin("5017745523502855825").done();
    b.alias("circle");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShape() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Shape", 0xc55c3e7213e340d0L, 0x9804490722b4fb78L, 0x45a29cf7edb1b68cL);
    b.class_(false, false, false);
    b.origin("r:ef26fc9a-d854-444a-8e3b-553a4a5da465(NewLanguage.structure)/5017745523502855820");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSquare() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Square", 0xc55c3e7213e340d0L, 0x9804490722b4fb78L, 0x45a29cf7edb1b692L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.Shape
    b.super_(0xc55c3e7213e340d0L, 0x9804490722b4fb78L, 0x45a29cf7edb1b68cL);
    b.origin("r:ef26fc9a-d854-444a-8e3b-553a4a5da465(NewLanguage.structure)/5017745523502855826");
    b.version(3);
    b.property("upperLeftX", 0x45a29cf7edb1b693L).type(PrimitiveTypeId.INTEGER).origin("5017745523502855827").done();
    b.property("upperLeftY", 0x45a29cf7edb1b694L).type(PrimitiveTypeId.INTEGER).origin("5017745523502855828").done();
    b.property("size", 0x45a29cf7edb1b695L).type(PrimitiveTypeId.INTEGER).origin("5017745523502855829").done();
    b.alias("square");
    return b.create();
  }
}
